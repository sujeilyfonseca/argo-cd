Results:

Golang errors in file: [/Users/sfonseca/Repositories/argo-cd/util/tls/tls.go]:

  > [line 112 : column 8] - previous case

  > [line 114 : column 8] - duplicate case tls.VersionTLS13 (constant 772 of type uint16) in expression switch



[/Users/sfonseca/Repositories/argo-cd/util/settings/settings.go:1723] - G402 (CWE-295): TLS MinVersion too low. (Confidence: HIGH, Severity: HIGH)
    1722: 	if oidcConfig != nil {
  > 1723: 		tlsConfig = &tls.Config{}
    1724: 		if oidcConfig.RootCA != "" {



[/Users/sfonseca/Repositories/argo-cd/util/grpc/grpc.go:138] - G402 (CWE-295): TLS MinVersion too low. (Confidence: HIGH, Severity: HIGH)
    137: 		testResult.TLS = true
  > 138: 		creds := credentials.NewTLS(&tls.Config{})
    139: 		ctx, cancel := context.WithTimeout(context.Background(), dialTime)



[/Users/sfonseca/Repositories/argo-cd/util/git/client.go:215-217] - G402 (CWE-295): TLS MinVersion too low. (Confidence: HIGH, Severity: HIGH)
    214: 		Proxy: proxyFunc,
  > 215: 		TLSClientConfig: &tls.Config{
  > 216: 			GetClientCertificate: clientCertFunc,
  > 217: 		},
    218: 		DisableKeepAlives: true,



[/Users/sfonseca/Repositories/argo-cd/util/dex/dex.go:45-54] - G402 (CWE-295): TLS MinVersion too low. (Confidence: HIGH, Severity: HIGH)
    44: 	}
  > 45: 	return &tls.Config{
  > 46: 		InsecureSkipVerify: false,
  > 47: 		RootCAs:            tlsConfig.RootCAs,
  > 48: 		VerifyPeerCertificate: func(rawCerts [][]byte, verifiedChains [][]*x509.Certificate) error {
  > 49: 			if !bytes.Equal(rawCerts[0], tlsConfig.Certificate) {
  > 50: 				return fmt.Errorf("dex server certificate does not match")
  > 51: 			}
  > 52: 			return nil
  > 53: 		},
  > 54: 	}
    55: }



[/Users/sfonseca/Repositories/argo-cd/util/dex/dex.go:42] - G402 (CWE-295): TLS InsecureSkipVerify set true. (Confidence: HIGH, Severity: HIGH)
    41: 		return &tls.Config{
  > 42: 			InsecureSkipVerify: true,
    43: 		}



[/Users/sfonseca/Repositories/argo-cd/applicationset/services/scm_provider/gitea.go:33] - G402 (CWE-295): TLS InsecureSkipVerify set true. (Confidence: HIGH, Severity: HIGH)
    32: 			Transport: &http.Transport{
  > 33: 				TLSClientConfig: &tls.Config{InsecureSkipVerify: true},
    34: 			}}



[/Users/sfonseca/Repositories/argo-cd/applicationset/services/pull_request/gitea.go:32] - G402 (CWE-295): TLS InsecureSkipVerify set true. (Confidence: HIGH, Severity: HIGH)
    31: 			Transport: &http.Transport{
  > 32: 				TLSClientConfig: &tls.Config{InsecureSkipVerify: true},
    33: 			}}



[/Users/sfonseca/Repositories/argo-cd/util/helm/client.go:318] - G402 (CWE-295): TLS InsecureSkipVerify may be true. (Confidence: LOW, Severity: HIGH)
    317: func newTLSConfig(creds Creds) (*tls.Config, error) {
  > 318: 	tlsConfig := &tls.Config{InsecureSkipVerify: creds.InsecureSkipVerify}
    319: 



[/Users/sfonseca/Repositories/argo-cd/util/settings/settings.go:413] - G101 (CWE-798): Potential hardcoded credentials (Confidence: LOW, Severity: HIGH)
    412: 	// externalServerTLSSecretName defines the name of the external secret holding the server's TLS certificate
  > 413: 	externalServerTLSSecretName = "argocd-server-tls"
    414: 	// partOfArgoCDSelector holds label selector that should be applied to config maps and secrets used to manage Argo CD



[/Users/sfonseca/Repositories/argo-cd/util/settings/settings.go:407] - G101 (CWE-798): Potential hardcoded credentials (Confidence: LOW, Severity: HIGH)
    406: 	// initialPasswordSecretName is the name of the secret that will hold the initial admin password
  > 407: 	initialPasswordSecretName = "argocd-initial-admin-secret"
    408: 	// initialPasswordSecretField is the name of the field in initialPasswordSecretName to store the password



[/Users/sfonseca/Repositories/argo-cd/util/settings/settings.go:367] - G101 (CWE-798): Potential hardcoded credentials (Confidence: LOW, Severity: HIGH)
    366: 	// settingsWebhookGogsSecret is the key for Gogs webhook secret
  > 367: 	settingsWebhookGogsSecretKey = "webhook.gogs.secret"
    368: 	// settingsApplicationInstanceLabelKey is the key to configure injected app instance label key



[/Users/sfonseca/Repositories/argo-cd/util/settings/settings.go:365] - G101 (CWE-798): Potential hardcoded credentials (Confidence: LOW, Severity: HIGH)
    364: 	// settingsWebhookBitbucketServerSecret is the key for BitbucketServer webhook secret
  > 365: 	settingsWebhookBitbucketServerSecretKey = "webhook.bitbucketserver.secret"
    366: 	// settingsWebhookGogsSecret is the key for Gogs webhook secret



[/Users/sfonseca/Repositories/argo-cd/util/settings/settings.go:361] - G101 (CWE-798): Potential hardcoded credentials (Confidence: LOW, Severity: HIGH)
    360: 	// settingsWebhookGitLabSecret is the key for the GitLab shared webhook secret
  > 361: 	settingsWebhookGitLabSecretKey = "webhook.gitlab.secret"
    362: 	// settingsWebhookBitbucketUUID is the key for Bitbucket webhook UUID



[/Users/sfonseca/Repositories/argo-cd/util/settings/settings.go:359] - G101 (CWE-798): Potential hardcoded credentials (Confidence: LOW, Severity: HIGH)
    358: 	// settingsWebhookGitHubSecret is the key for the GitHub shared webhook secret
  > 359: 	settingsWebhookGitHubSecretKey = "webhook.github.secret"
    360: 	// settingsWebhookGitLabSecret is the key for the GitLab shared webhook secret



[/Users/sfonseca/Repositories/argo-cd/util/git/creds.go:31] - G101 (CWE-798): Potential hardcoded credentials (Confidence: LOW, Severity: HIGH)
    30: 	// ASKPASS_NONCE_ENV is the environment variable that is used to pass the nonce to the askpass script
  > 31: 	ASKPASS_NONCE_ENV = "ARGOCD_GIT_ASKPASS_NONCE"
    32: 	// githubAccessTokenUsername is a username that is used to with the github access token



[/Users/sfonseca/Repositories/argo-cd/test/e2e/fixture/fixture.go:64] - G101 (CWE-798): Potential hardcoded credentials (Confidence: LOW, Severity: HIGH)
    63: 	EnvAdminUsername = "ARGOCD_E2E_ADMIN_USERNAME"
  > 64: 	EnvAdminPassword = "ARGOCD_E2E_ADMIN_PASSWORD"
    65: )



[/Users/sfonseca/Repositories/argo-cd/server/project/project.go:39] - G101 (CWE-798): Potential hardcoded credentials (Confidence: LOW, Severity: HIGH)
    38: 	// JWTTokenSubFormat format of the JWT token subject that Argo CD vends out.
  > 39: 	JWTTokenSubFormat = "proj:%s:%s"
    40: )



[/Users/sfonseca/Repositories/argo-cd/pkg/apis/application/v1alpha1/generated.pb.go:15649] - G101 (CWE-798): Potential hardcoded credentials (Confidence: LOW, Severity: HIGH)
    15648: 	}
  > 15649: 	repeatedStringForJWTTokens := "[]JWTToken{"
    15650: 	for _, f := range this.JWTTokens {



[/Users/sfonseca/Repositories/argo-cd/pkg/apis/application/v1alpha1/generated.pb.go:14495] - G101 (CWE-798): Potential hardcoded credentials (Confidence: LOW, Severity: HIGH)
    14494: 	github_com_gogo_protobuf_sortkeys.Strings(keysForJWTTokensByRole)
  > 14495: 	mapStringForJWTTokensByRole := "map[string]JWTTokens{"
    14496: 	for _, k := range keysForJWTTokensByRole {



[/Users/sfonseca/Repositories/argo-cd/pkg/apiclient/apiclient.go:66] - G101 (CWE-798): Potential hardcoded credentials (Confidence: LOW, Severity: HIGH)
    65: 	// EnvArgoCDAuthToken is the environment variable to look for an Argo CD auth token
  > 66: 	EnvArgoCDAuthToken = "ARGOCD_AUTH_TOKEN"
    67: 	// EnvArgoCDgRPCMaxSizeMB is the environment variable to look for a max gRPC message size



[/Users/sfonseca/Repositories/argo-cd/common/common.go:224] - G101 (CWE-798): Potential hardcoded credentials (Confidence: LOW, Severity: HIGH)
    223: 	// DefaultCMPWorkDirName defines the work directory name used by the cmp-server
  > 224: 	DefaultCMPWorkDirName = "_cmp_server"
    225: 



[/Users/sfonseca/Repositories/argo-cd/common/common.go:215] - G101 (CWE-798): Potential hardcoded credentials (Confidence: LOW, Severity: HIGH)
    214: 	// EnvCMPWorkDir defines the full path of the work directory used by the CMP server
  > 215: 	EnvCMPWorkDir = "ARGOCD_CMP_WORKDIR"
    216: )



[/Users/sfonseca/Repositories/argo-cd/common/common.go:199] - G101 (CWE-798): Potential hardcoded credentials (Confidence: LOW, Severity: HIGH)
    198: 	// EnvGithubAppCredsExpirationDuration controls the caching of Github app credentials. This value is in minutes (default: 60)
  > 199: 	EnvGithubAppCredsExpirationDuration = "ARGOCD_GITHUB_APP_CREDS_EXPIRATION_DURATION"
    200: 	// EnvHelmIndexCacheDuration controls how the helm repository index file is cached for (default: 0)



[/Users/sfonseca/Repositories/argo-cd/common/common.go:138] - G101 (CWE-798): Potential hardcoded credentials (Confidence: LOW, Severity: HIGH)
    137: 	// LabelValueSecretTypeRepoCreds indicates a secret type of repository credentials
  > 138: 	LabelValueSecretTypeRepoCreds = "repo-creds"
    139: 



[/Users/sfonseca/Repositories/argo-cd/common/common.go:132] - G101 (CWE-798): Potential hardcoded credentials (Confidence: LOW, Severity: HIGH)
    131: 	// LabelKeySecretType contains the type of argocd secret (currently: 'cluster', 'repository', 'repo-config' or 'repo-creds')
  > 132: 	LabelKeySecretType = "argocd.argoproj.io/secret-type"
    133: 	// LabelValueSecretTypeCluster indicates a secret type of cluster



[/Users/sfonseca/Repositories/argo-cd/common/common.go:99] - G101 (CWE-798): Potential hardcoded credentials (Confidence: LOW, Severity: HIGH)
    98: 	// PasswordPatten is the default password patten
  > 99: 	PasswordPatten = `^.{8,32}$`
    100: )



[/Users/sfonseca/Repositories/argo-cd/common/common.go:28] - G101 (CWE-798): Potential hardcoded credentials (Confidence: LOW, Severity: HIGH)
    27: 	ArgoCDNotificationsConfigMapName = "argocd-notifications-cm"
  > 28: 	ArgoCDNotificationsSecretName    = "argocd-notifications-secret"
    29: 	ArgoCDRBACConfigMapName          = "argocd-rbac-cm"



[/Users/sfonseca/Repositories/argo-cd/cmd/argocd/commands/repocreds.go:51-65] - G101 (CWE-798): Potential hardcoded credentials (Confidence: LOW, Severity: HIGH)
    50: 	// For better readability and easier formatting
  > 51: 	var repocredsAddExamples = `  # Add credentials with user/pass authentication to use for all repositories under https://git.example.com/repos
  > 52:   argocd repocreds add https://git.example.com/repos/ --username git --password secret
  > 53: 
  > 54:   # Add credentials with SSH private key authentication to use for all repositories under ssh://git@git.example.com/repos
  > 55:   argocd repocreds add ssh://git@git.example.com/repos/ --ssh-private-key-path ~/.ssh/id_rsa
  > 56: 
  > 57:   # Add credentials with GitHub App authentication to use for all repositories under https://github.com/repos
  > 58:   argocd repocreds add https://github.com/repos/ --github-app-id 1 --github-app-installation-id 2 --github-app-private-key-path test.private-key.pem
  > 59: 
  > 60:   # Add credentials with GitHub App authentication to use for all repositories under https://ghe.example.com/repos
  > 61:   argocd repocreds add https://ghe.example.com/repos/ --github-app-id 1 --github-app-installation-id 2 --github-app-private-key-path test.private-key.pem --github-app-enterprise-base-url https://ghe.example.com/api/v3
  > 62: 
  > 63:   # Add credentials with helm oci registry so that these oci registry urls do not need to be added as repos individually.
  > 64:   argocd repocreds add localhost:5000/myrepo --enable-oci --type helm 
  > 65: `
    66: 



[/Users/sfonseca/Repositories/argo-cd/cmd/argocd/commands/project_role.go:321] - G101 (CWE-798): Potential hardcoded credentials (Confidence: LOW, Severity: HIGH)
    320: 
  > 321: 			tokenRowFormat := "%s\t%v\t%v\n"
    322: 			for _, token := range role.JWTTokens {



[/Users/sfonseca/Repositories/argo-cd/applicationset/utils/clusterUtils.go:46] - G101 (CWE-798): Potential hardcoded credentials (Confidence: LOW, Severity: HIGH)
    45: const (
  > 46: 	ArgoCDSecretTypeLabel   = "argocd.argoproj.io/secret-type"
    47: 	ArgoCDSecretTypeCluster = "cluster"



[/Users/sfonseca/Repositories/argo-cd/applicationset/generators/cluster.go:22] - G101 (CWE-798): Potential hardcoded credentials (Confidence: LOW, Severity: HIGH)
    21: const (
  > 22: 	ArgoCDSecretTypeLabel   = "argocd.argoproj.io/secret-type"
    23: 	ArgoCDSecretTypeCluster = "cluster"



[/Users/sfonseca/Repositories/argo-cd/util/git/client.go:255] - G106 (CWE-322): Use of ssh InsecureIgnoreHostKey should be audited (Confidence: HIGH, Severity: MEDIUM)
    254: 		if creds.insecure {
  > 255: 			auth.HostKeyCallback = ssh.InsecureIgnoreHostKey()
    256: 		} else {



[/Users/sfonseca/Repositories/argo-cd/cmd/argocd-repo-server/commands/argocd_repo_server.go:179] - G114 (CWE-676): Use of net/http serve function that has no support for setting timeouts (Confidence: HIGH, Severity: MEDIUM)
    178: 			http.Handle("/metrics", metricsServer.GetHandler())
  > 179: 			go func() { errors.CheckError(http.ListenAndServe(fmt.Sprintf(":%d", metricsPort), nil)) }()
    180: 			go func() { errors.CheckError(askPassServer.Run(askpass.SocketPath)) }()



[/Users/sfonseca/Repositories/argo-cd/cmd/argocd-notification/commands/controller.go:136] - G114 (CWE-676): Use of net/http serve function that has no support for setting timeouts (Confidence: HIGH, Severity: MEDIUM)
    135: 			go func() {
  > 136: 				log.Fatal(http.ListenAndServe(fmt.Sprintf("0.0.0.0:%d", metricsPort), http.DefaultServeMux))
    137: 			}()



[/Users/sfonseca/Repositories/argo-cd/cmd/argocd-applicationset-controller/commands/applicationset_controller.go:216] - G114 (CWE-676): Use of net/http serve function that has no support for setting timeouts (Confidence: HIGH, Severity: MEDIUM)
    215: 		log.Info("Starting webhook server")
  > 216: 		err := http.ListenAndServe(webhookAddr, mux)
    217: 		if err != nil {



[/Users/sfonseca/Repositories/argo-cd/util/helm/client.go:201] - G204 (CWE-78): Subprocess launched with variable (Confidence: HIGH, Severity: MEDIUM)
    200: 
  > 201: 	cmd := exec.Command("tar", "-zxvf", cachedChartPath)
    202: 	cmd.Dir = tempDir



[/Users/sfonseca/Repositories/argo-cd/util/gpg/gpg.go:503] - G204 (CWE-78): Subprocess launched with variable (Confidence: HIGH, Severity: MEDIUM)
    502: 	}
  > 503: 	cmd := exec.Command("gpg", args...)
    504: 	cmd.Env = getGPGEnviron()



[/Users/sfonseca/Repositories/argo-cd/util/gpg/gpg.go:482] - G204 (CWE-78): Subprocess launched with variable (Confidence: HIGH, Severity: MEDIUM)
    481: 	args := append([]string{}, "--no-permission-warning", "--list-secret-keys", keyID)
  > 482: 	cmd := exec.Command("gpg-wrapper.sh", args...)
    483: 	cmd.Env = getGPGEnviron()



[/Users/sfonseca/Repositories/argo-cd/util/gpg/gpg.go:468] - G204 (CWE-78): Subprocess launched with variable (Confidence: HIGH, Severity: MEDIUM)
    467: 	args := append([]string{}, "--no-permission-warning", "--yes", "--batch", "--delete-keys", keyID)
  > 468: 	cmd := exec.Command("gpg", args...)
    469: 	cmd.Env = getGPGEnviron()



[/Users/sfonseca/Repositories/argo-cd/util/cli/cli.go:266] - G204 (CWE-78): Subprocess launched with variable (Confidence: HIGH, Severity: MEDIUM)
    265: 		tempFile := writeToTempFile(filePattern, data)
  > 266: 		cmd := exec.Command(editor, append(editorArgs, tempFile)...)
    267: 		cmd.Stdout = os.Stdout



[/Users/sfonseca/Repositories/argo-cd/util/kustomize/kustomize.go:155] - G204 (CWE-78): Subprocess launched with a potential tainted input or cmd arguments (Confidence: HIGH, Severity: MEDIUM)
    154: 	} else {
  > 155: 		cmd = exec.Command(k.getBinaryPath(), "build", k.path)
    156: 	}



[/Users/sfonseca/Repositories/argo-cd/util/kustomize/kustomize.go:153] - G204 (CWE-78): Subprocess launched with a potential tainted input or cmd arguments (Confidence: HIGH, Severity: MEDIUM)
    152: 		params := parseKustomizeBuildOptions(k.path, kustomizeOptions.BuildOptions)
  > 153: 		cmd = exec.Command(k.getBinaryPath(), params...)
    154: 	} else {



[/Users/sfonseca/Repositories/argo-cd/util/kustomize/kustomize.go:141] - G204 (CWE-78): Subprocess launched with a potential tainted input or cmd arguments (Confidence: HIGH, Severity: MEDIUM)
    140: 			}
  > 141: 			cmd := exec.Command(k.getBinaryPath(), append(args, mapToEditAddArgs(opts.CommonAnnotations)...)...)
    142: 			cmd.Dir = k.path



[/Users/sfonseca/Repositories/argo-cd/util/kustomize/kustomize.go:127] - G204 (CWE-78): Subprocess launched with a potential tainted input or cmd arguments (Confidence: HIGH, Severity: MEDIUM)
    126: 			}
  > 127: 			cmd := exec.Command(k.getBinaryPath(), append(args, mapToEditAddArgs(opts.CommonLabels)...)...)
    128: 			cmd.Dir = k.path



[/Users/sfonseca/Repositories/argo-cd/util/kustomize/kustomize.go:113] - G204 (CWE-78): Subprocess launched with a potential tainted input or cmd arguments (Confidence: HIGH, Severity: MEDIUM)
    112: 			}
  > 113: 			cmd := exec.Command(k.getBinaryPath(), args...)
    114: 			cmd.Dir = k.path



[/Users/sfonseca/Repositories/argo-cd/util/kustomize/kustomize.go:99] - G204 (CWE-78): Subprocess launched with a potential tainted input or cmd arguments (Confidence: HIGH, Severity: MEDIUM)
    98: 		if opts.NameSuffix != "" {
  > 99: 			cmd := exec.Command(k.getBinaryPath(), "edit", "set", "namesuffix", "--", opts.NameSuffix)
    100: 			cmd.Dir = k.path



[/Users/sfonseca/Repositories/argo-cd/util/kustomize/kustomize.go:91] - G204 (CWE-78): Subprocess launched with a potential tainted input or cmd arguments (Confidence: HIGH, Severity: MEDIUM)
    90: 		if opts.NamePrefix != "" {
  > 91: 			cmd := exec.Command(k.getBinaryPath(), "edit", "set", "nameprefix", "--", opts.NamePrefix)
    92: 			cmd.Dir = k.path



[/Users/sfonseca/Repositories/argo-cd/util/helm/cmd.go:53] - G204 (CWE-78): Subprocess launched with a potential tainted input or cmd arguments (Confidence: HIGH, Severity: MEDIUM)
    52: func (c Cmd) run(args ...string) (string, error) {
  > 53: 	cmd := exec.Command(c.binaryName, args...)
    54: 	cmd.Dir = c.WorkDir



[/Users/sfonseca/Repositories/argo-cd/util/gpg/gpg.go:578] - G204 (CWE-78): Subprocess launched with a potential tainted input or cmd arguments (Confidence: HIGH, Severity: MEDIUM)
    577: 	for _, key := range keys {
  > 578: 		cmd := exec.Command("gpg", "--no-permission-warning", "-a", "--export", key.KeyID)
    579: 		cmd.Env = getGPGEnviron()



[/Users/sfonseca/Repositories/argo-cd/util/gpg/gpg.go:446] - G204 (CWE-78): Subprocess launched with a potential tainted input or cmd arguments (Confidence: HIGH, Severity: MEDIUM)
    445: 	// Load ownertrust from the file we have constructed and instruct gpg to update the trustdb
  > 446: 	cmd := exec.Command("gpg", "--no-permission-warning", "--import-ownertrust", f.Name())
    447: 	cmd.Env = getGPGEnviron()



[/Users/sfonseca/Repositories/argo-cd/util/gpg/gpg.go:287] - G204 (CWE-78): Subprocess launched with a potential tainted input or cmd arguments (Confidence: HIGH, Severity: MEDIUM)
    286: 
  > 287: 	cmd := exec.Command("gpg", "--no-permission-warning", "--logger-fd", "1", "--batch", "--gen-key", f.Name())
    288: 	cmd.Env = getGPGEnviron()



[/Users/sfonseca/Repositories/argo-cd/util/git/client.go:296] - G204 (CWE-78): Subprocess launched with a potential tainted input or cmd arguments (Confidence: HIGH, Severity: MEDIUM)
    295: 	log.Infof("Initializing %s to %s", m.repoURL, m.root)
  > 296: 	_, err = executil.Run(exec.Command("rm", "-rf", m.root))
    297: 	if err != nil {



[/Users/sfonseca/Repositories/argo-cd/util/cli/cli.go:332] - G204 (CWE-78): Subprocess launched with a potential tainted input or cmd arguments (Confidence: HIGH, Severity: MEDIUM)
    331: 	}
  > 332: 	cmd := exec.Command(cmdBinary, append(args, liveFile, targetFile)...)
    333: 	cmd.Stderr = os.Stderr



[/Users/sfonseca/Repositories/argo-cd/reposerver/repository/repository.go:1535] - G204 (CWE-78): Subprocess launched with a potential tainted input or cmd arguments (Confidence: HIGH, Severity: MEDIUM)
    1534: 	}
  > 1535: 	cmd := exec.Command(command.Command[0], append(command.Command[1:], command.Args...)...)
    1536: 	cmd.Env = env



[/Users/sfonseca/Repositories/argo-cd/cmpserver/plugin/plugin.go:65] - G204 (CWE-78): Subprocess launched with a potential tainted input or cmd arguments (Confidence: HIGH, Severity: MEDIUM)
    64: 	}
  > 65: 	cmd := exec.CommandContext(ctx, command.Command[0], append(command.Command[1:], command.Args...)...)
    66: 



[/Users/sfonseca/Repositories/argo-cd/util/tls/tls.go:367] - G304 (CWE-22): Potential file inclusion via variable (Confidence: HIGH, Severity: MEDIUM)
    366: func LoadX509Cert(path string) (*x509.Certificate, error) {
  > 367: 	bytes, err := os.ReadFile(path)
    368: 	if err != nil {



[/Users/sfonseca/Repositories/argo-cd/util/tls/tls.go:353] - G304 (CWE-22): Potential file inclusion via variable (Confidence: HIGH, Severity: MEDIUM)
    352: 		} else {
  > 353: 			f, err := os.ReadFile(path)
    354: 			if err != nil {



[/Users/sfonseca/Repositories/argo-cd/util/io/files/tar.go:210] - G304 (CWE-22): Potential file inclusion via variable (Confidence: HIGH, Severity: MEDIUM)
    209: 	if fi.Mode().IsRegular() {
  > 210: 		f, err := os.Open(path)
    211: 		if err != nil {



[/Users/sfonseca/Repositories/argo-cd/util/helm/helm.go:155] - G304 (CWE-22): Potential file inclusion via variable (Confidence: HIGH, Severity: MEDIUM)
    154: 			}
  > 155: 			fileValues, err = os.ReadFile(file)
    156: 		}



[/Users/sfonseca/Repositories/argo-cd/util/config/reader.go:55] - G304 (CWE-22): Potential file inclusion via variable (Confidence: HIGH, Severity: MEDIUM)
    54: func UnmarshalLocalFile(path string, obj interface{}) error {
  > 55: 	data, err := os.ReadFile(path)
    56: 	if err == nil {



[/Users/sfonseca/Repositories/argo-cd/util/cli/cli.go:274] - G304 (CWE-22): Potential file inclusion via variable (Confidence: HIGH, Severity: MEDIUM)
    273: 
  > 274: 		updated, err := os.ReadFile(tempFile)
    275: 		errors.CheckError(err)



[/Users/sfonseca/Repositories/argo-cd/test/testutil.go:69] - G304 (CWE-22): Potential file inclusion via variable (Confidence: HIGH, Severity: MEDIUM)
    68: func MustLoadFileToString(path string) string {
  > 69: 	o, err := os.ReadFile(path)
    70: 	if err != nil {



[/Users/sfonseca/Repositories/argo-cd/test/fixture/path/files.go:66] - G304 (CWE-22): Potential file inclusion via variable (Confidence: HIGH, Severity: MEDIUM)
    65: 
  > 66: 	destFile, err := os.Create(dest)
    67: 	if err != nil {



[/Users/sfonseca/Repositories/argo-cd/test/e2e/fixture/gpgkeys/gpgkeys.go:20] - G304 (CWE-22): Potential file inclusion via variable (Confidence: HIGH, Severity: MEDIUM)
    19: 	if fixture.IsLocal() {
  > 20: 		keyData, err := os.ReadFile(keyPath)
    21: 		errors.CheckError(err)



[/Users/sfonseca/Repositories/argo-cd/test/e2e/fixture/fixture.go:753] - G304 (CWE-22): Potential file inclusion via variable (Confidence: HIGH, Severity: MEDIUM)
    752: 
  > 753: 	bytes, err := os.ReadFile(path.Join("testdata", filename))
    754: 	CheckError(err)



[/Users/sfonseca/Repositories/argo-cd/test/e2e/fixture/fixture.go:672] - G304 (CWE-22): Potential file inclusion via variable (Confidence: HIGH, Severity: MEDIUM)
    671: 	filename := filepath.Join(repoDirectory(), path)
  > 672: 	bytes, err := os.ReadFile(filename)
    673: 	CheckError(err)



[/Users/sfonseca/Repositories/argo-cd/test/e2e/fixture/certs/certs.go:53] - G304 (CWE-22): Potential file inclusion via variable (Confidence: HIGH, Severity: MEDIUM)
    52: 	if fixture.IsLocal() {
  > 53: 		knownHostsData, err := os.ReadFile(knownHostsPath)
    54: 		errors.CheckError(err)



[/Users/sfonseca/Repositories/argo-cd/test/e2e/fixture/certs/certs.go:24] - G304 (CWE-22): Potential file inclusion via variable (Confidence: HIGH, Severity: MEDIUM)
    23: 		errors.FailOnErr(fixture.RunCli(args...))
  > 24: 		certData, err := os.ReadFile(caCertPath)
    25: 		errors.CheckError(err)



[/Users/sfonseca/Repositories/argo-cd/server/server.go:960] - G304 (CWE-22): Potential file inclusion via variable (Confidence: HIGH, Severity: MEDIUM)
    959: 
  > 960: 				f, err := os.Open(filePath)
    961: 				if err != nil {



[/Users/sfonseca/Repositories/argo-cd/reposerver/repository/repository.go:1805] - G304 (CWE-22): Potential file inclusion via variable (Confidence: HIGH, Severity: MEDIUM)
    1804: 	if err == nil && !info.IsDir() {
  > 1805: 		bytes, err := os.ReadFile(stringPath)
    1806: 		if err != nil {



[/Users/sfonseca/Repositories/argo-cd/reposerver/repository/repository.go:1175] - G304 (CWE-22): Potential file inclusion via variable (Confidence: HIGH, Severity: MEDIUM)
    1174: 		}
  > 1175: 		patch, err := os.ReadFile(filename)
    1176: 		if err != nil {



[/Users/sfonseca/Repositories/argo-cd/reposerver/repository/repository.go:750] - G304 (CWE-22): Potential file inclusion via variable (Confidence: HIGH, Severity: MEDIUM)
    749: 	repos := make([]*v1alpha1.Repository, 0)
  > 750: 	f, err := os.ReadFile(filepath.Join(appPath, "Chart.yaml"))
    751: 	if err != nil {



[/Users/sfonseca/Repositories/argo-cd/hack/gen-resources/util/gen_options_parser.go:49] - G304 (CWE-22): Potential file inclusion via variable (Confidence: HIGH, Severity: MEDIUM)
    48: func Parse(opts *GenerateOpts, file string) error {
  > 49: 	fp, err := os.ReadFile(file)
    50: 	if err != nil {



[/Users/sfonseca/Repositories/argo-cd/hack/gen-catalog/main.go:220] - G304 (CWE-22): Potential file inclusion via variable (Confidence: HIGH, Severity: MEDIUM)
    219: 		}
  > 220: 		data, err := os.ReadFile(p)
    221: 		if err != nil {



[/Users/sfonseca/Repositories/argo-cd/hack/gen-catalog/main.go:196] - G304 (CWE-22): Potential file inclusion via variable (Confidence: HIGH, Severity: MEDIUM)
    195: 		}
  > 196: 		data, err := os.ReadFile(p)
    197: 		if err != nil {



[/Users/sfonseca/Repositories/argo-cd/cmd/util/applicationset.go:36] - G304 (CWE-22): Potential file inclusion via variable (Confidence: HIGH, Severity: MEDIUM)
    35: 		if err != nil || !(parsedURL.Scheme == "http" || parsedURL.Scheme == "https") {
  > 36: 			return os.ReadFile(fileURL)
    37: 		}



[/Users/sfonseca/Repositories/argo-cd/cmd/util/app.go:540] - G304 (CWE-22): Potential file inclusion via variable (Confidence: HIGH, Severity: MEDIUM)
    539: 		if err != nil || !(parsedURL.Scheme == "http" || parsedURL.Scheme == "https") {
  > 540: 			return os.ReadFile(fileURL)
    541: 		}



[/Users/sfonseca/Repositories/argo-cd/cmd/argocd/commands/repocreds.go:121] - G304 (CWE-22): Potential file inclusion via variable (Confidence: HIGH, Severity: MEDIUM)
    120: 				if git.IsHTTPSURL(repo.URL) {
  > 121: 					githubAppPrivateKey, err := os.ReadFile(githubAppPrivateKeyPath)
    122: 					errors.CheckError(err)



[/Users/sfonseca/Repositories/argo-cd/cmd/argocd/commands/repocreds.go:108] - G304 (CWE-22): Potential file inclusion via variable (Confidence: HIGH, Severity: MEDIUM)
    107: 					errors.CheckError(err)
  > 108: 					tlsCertKey, err := os.ReadFile(tlsClientCertKeyPath)
    109: 					errors.CheckError(err)



[/Users/sfonseca/Repositories/argo-cd/cmd/argocd/commands/repocreds.go:106] - G304 (CWE-22): Potential file inclusion via variable (Confidence: HIGH, Severity: MEDIUM)
    105: 				if git.IsHTTPSURL(repo.URL) {
  > 106: 					tlsCertData, err := os.ReadFile(tlsClientCertPath)
    107: 					errors.CheckError(err)



[/Users/sfonseca/Repositories/argo-cd/cmd/argocd/commands/repocreds.go:85] - G304 (CWE-22): Potential file inclusion via variable (Confidence: HIGH, Severity: MEDIUM)
    84: 				if ok, _ := git.IsSSHURL(repo.URL); ok {
  > 85: 					keyData, err := os.ReadFile(sshPrivateKeyPath)
    86: 					if err != nil {



[/Users/sfonseca/Repositories/argo-cd/cmd/argocd/commands/gpg.go:118] - G304 (CWE-22): Potential file inclusion via variable (Confidence: HIGH, Severity: MEDIUM)
    117: 			}
  > 118: 			keyData, err := os.ReadFile(fromFile)
    119: 			if err != nil {



[/Users/sfonseca/Repositories/argo-cd/cmd/argocd/commands/context.go:52] - G304 (CWE-22): Potential file inclusion via variable (Confidence: HIGH, Severity: MEDIUM)
    51: 			if ctxName == "-" {
  > 52: 				prevCtxBytes, err := os.ReadFile(prevCtxFile)
    53: 				errors.CheckError(err)



[/Users/sfonseca/Repositories/argo-cd/cmd/argocd/commands/admin/settings_rbac.go:265] - G304 (CWE-22): Potential file inclusion via variable (Confidence: HIGH, Severity: MEDIUM)
    264: 
  > 265: 	upol, err := os.ReadFile(policyFile)
    266: 	if err != nil {



[/Users/sfonseca/Repositories/argo-cd/cmd/argocd/commands/admin/project_allowlist.go:101] - G304 (CWE-22): Potential file inclusion via variable (Confidence: HIGH, Severity: MEDIUM)
    100: func generateProjectAllowList(serverResources []*metav1.APIResourceList, clusterRoleFileName string, projName string) (*v1alpha1.AppProject, error) {
  > 101: 	yamlBytes, err := os.ReadFile(clusterRoleFileName)
    102: 	if err != nil {



[/Users/sfonseca/Repositories/argo-cd/cmd/argocd/commands/admin/project_allowlist.go:54] - G304 (CWE-22): Potential file inclusion via variable (Confidence: HIGH, Severity: MEDIUM)
    53: 			} else {
  > 54: 				f, err := os.Create(out)
    55: 				errors.CheckError(err)



[/Users/sfonseca/Repositories/argo-cd/cmd/argocd/commands/admin/generatespec_utils.go:31] - G304 (CWE-22): Potential file inclusion via variable (Confidence: HIGH, Severity: MEDIUM)
    30: 
  > 31: 	fileOut, err := os.Create(filePath)
    32: 	if err != nil {



[/Users/sfonseca/Repositories/argo-cd/cmd/argocd/commands/admin/backup.go:143] - G304 (CWE-22): Potential file inclusion via variable (Confidence: HIGH, Severity: MEDIUM)
    142: 			} else {
  > 143: 				input, err = os.ReadFile(in)
    144: 			}



[/Users/sfonseca/Repositories/argo-cd/cmd/argocd/commands/admin/backup.go:45] - G304 (CWE-22): Potential file inclusion via variable (Confidence: HIGH, Severity: MEDIUM)
    44: 			} else {
  > 45: 				f, err := os.Create(out)
    46: 				errors.CheckError(err)



[/Users/sfonseca/Repositories/argo-cd/server/server.go:1004-1017] - G112 (CWE-400): Potential Slowloris Attack because ReadHeaderTimeout is not configured in the http.Server (Confidence: LOW, Severity: MEDIUM)
    1003: 	addr := fmt.Sprintf("localhost:%d/%s", port, strings.TrimRight(strings.TrimLeft(rootPath, "/"), "/"))
  > 1004: 	return &http.Server{
  > 1005: 		Addr: addr,
  > 1006: 		Handler: http.HandlerFunc(func(w http.ResponseWriter, req *http.Request) {
  > 1007: 			target := "https://" + req.Host
  > 1008: 			if rootPath != "" {
  > 1009: 				target += "/" + strings.TrimRight(strings.TrimLeft(rootPath, "/"), "/")
  > 1010: 			}
  > 1011: 			target += req.URL.Path
  > 1012: 			if len(req.URL.RawQuery) > 0 {
  > 1013: 				target += "?" + req.URL.RawQuery
  > 1014: 			}
  > 1015: 			http.Redirect(w, req, target, http.StatusTemporaryRedirect)
  > 1016: 		}),
  > 1017: 	}
    1018: }



[/Users/sfonseca/Repositories/argo-cd/server/server.go:835-847] - G112 (CWE-400): Potential Slowloris Attack because ReadHeaderTimeout is not configured in the http.Server (Confidence: LOW, Severity: MEDIUM)
    834: 	mux := http.NewServeMux()
  > 835: 	httpS := http.Server{
  > 836: 		Addr: endpoint,
  > 837: 		Handler: &handlerSwitcher{
  > 838: 			handler: mux,
  > 839: 			urlToHandler: map[string]http.Handler{
  > 840: 				"/api/badge":          badge.NewHandler(a.AppClientset, a.settingsMgr, a.Namespace),
  > 841: 				common.LogoutEndpoint: logout.NewHandler(a.AppClientset, a.settingsMgr, a.sessionMgr, a.ArgoCDServerOpts.RootPath, a.ArgoCDServerOpts.BaseHRef, a.Namespace),
  > 842: 			},
  > 843: 			contentTypeToHandler: map[string]http.Handler{
  > 844: 				"application/grpc-web+proto": grpcWebHandler,
  > 845: 			},
  > 846: 		},
  > 847: 	}
    848: 



[/Users/sfonseca/Repositories/argo-cd/server/metrics/metrics.go:58-61] - G112 (CWE-400): Potential Slowloris Attack because ReadHeaderTimeout is not configured in the http.Server (Confidence: LOW, Severity: MEDIUM)
    57: 	return &MetricsServer{
  > 58: 		Server: &http.Server{
  > 59: 			Addr:    fmt.Sprintf("%s:%d", host, port),
  > 60: 			Handler: mux,
  > 61: 		},
    62: 		redisRequestCounter:   redisRequestCounter,



[/Users/sfonseca/Repositories/argo-cd/controller/metrics/metrics.go:188-191] - G112 (CWE-400): Potential Slowloris Attack because ReadHeaderTimeout is not configured in the http.Server (Confidence: LOW, Severity: MEDIUM)
    187: 		registry: registry,
  > 188: 		Server: &http.Server{
  > 189: 			Addr:    addr,
  > 190: 			Handler: mux,
  > 191: 		},
    192: 		syncCounter:             syncCounter,



[/Users/sfonseca/Repositories/argo-cd/cmd/argocd/commands/login.go:301] - G112 (CWE-400): Potential Slowloris Attack because ReadHeaderTimeout is not configured in the http.Server (Confidence: LOW, Severity: MEDIUM)
    300: 	}
  > 301: 	srv := &http.Server{Addr: "localhost:" + strconv.Itoa(port)}
    302: 	http.HandleFunc("/auth/callback", callbackHandler)



[/Users/sfonseca/Repositories/argo-cd/util/config/reader.go:80] - G107 (CWE-88): Potential HTTP request made with variable url (Confidence: MEDIUM, Severity: MEDIUM)
    79: 	var data []byte
  > 80: 	resp, err := http.Get(url)
    81: 	if err == nil {



[/Users/sfonseca/Repositories/argo-cd/util/io/files/tar.go:126] - G110 (CWE-409): Potential DoS vulnerability via decompression bomb (Confidence: MEDIUM, Severity: MEDIUM)
    125: 			w := bufio.NewWriter(f)
  > 126: 			if _, err := io.Copy(w, tr); err != nil {
    127: 				f.Close()



[/Users/sfonseca/Repositories/argo-cd/util/webhook/webhook.go:246] - G601 (CWE-118): Implicit memory aliasing in for loop. (Confidence: MEDIUM, Severity: MEDIUM)
    245: 				} else if change.shaBefore != "" && change.shaAfter != "" {
  > 246: 					if err := a.storePreviouslyCachedManifests(&app, change, trackingMethod, appInstanceLabelKey); err != nil {
    247: 						log.Warnf("Failed to store cached manifests of previous revision for app '%s': %v", app.Name, err)



[/Users/sfonseca/Repositories/argo-cd/util/webhook/webhook.go:239] - G601 (CWE-118): Implicit memory aliasing in for loop. (Confidence: MEDIUM, Severity: MEDIUM)
    238: 			if appRevisionHasChanged(&app, revision, touchedHead) && appUsesURL(&app, webURL, repoRegexp) {
  > 239: 				if appFilesHaveChanged(&app, changedFiles) {
    240: 					_, err = argo.RefreshApp(appIf, app.ObjectMeta.Name, v1alpha1.RefreshTypeNormal)



[/Users/sfonseca/Repositories/argo-cd/util/webhook/webhook.go:238] - G601 (CWE-118): Implicit memory aliasing in for loop. (Confidence: MEDIUM, Severity: MEDIUM)
    237: 		for _, app := range apps.Items {
  > 238: 			if appRevisionHasChanged(&app, revision, touchedHead) && appUsesURL(&app, webURL, repoRegexp) {
    239: 				if appFilesHaveChanged(&app, changedFiles) {



[/Users/sfonseca/Repositories/argo-cd/util/webhook/webhook.go:238] - G601 (CWE-118): Implicit memory aliasing in for loop. (Confidence: MEDIUM, Severity: MEDIUM)
    237: 		for _, app := range apps.Items {
  > 238: 			if appRevisionHasChanged(&app, revision, touchedHead) && appUsesURL(&app, webURL, repoRegexp) {
    239: 				if appFilesHaveChanged(&app, changedFiles) {



[/Users/sfonseca/Repositories/argo-cd/test/e2e/fixture/applicationsets/utils/fixture.go:131] - G601 (CWE-118): Implicit memory aliasing in for loop. (Confidence: MEDIUM, Severity: MEDIUM)
    130: 			app.Finalizers = []string{}
  > 131: 			_, err := fixtureClient.AppClientset.ArgoprojV1alpha1().Applications(ArgoCDNamespace).Update(context.TODO(), &app, v1.UpdateOptions{})
    132: 			if err != nil {



[/Users/sfonseca/Repositories/argo-cd/server/project/project.go:504] - G601 (CWE-118): Implicit memory aliasing in for loop. (Confidence: MEDIUM, Severity: MEDIUM)
    503: 			if proj.NormalizeJWTTokens() {
  > 504: 				_, err := s.appclientset.ArgoprojV1alpha1().AppProjects(s.ns).Update(context.Background(), &proj, metav1.UpdateOptions{})
    505: 				if err == nil {



[/Users/sfonseca/Repositories/argo-cd/server/application/application.go:1859] - G601 (CWE-118): Implicit memory aliasing in for loop. (Confidence: MEDIUM, Severity: MEDIUM)
    1858: 		if info.ID == rollbackReq.GetId() {
  > 1859: 			deploymentInfo = &info
    1860: 			break



[/Users/sfonseca/Repositories/argo-cd/server/application/application.go:1701] - G601 (CWE-118): Implicit memory aliasing in for loop. (Confidence: MEDIUM, Severity: MEDIUM)
    1700: 				resourceNode.Kind == parentResource.Kind {
  > 1701: 				if isTheSelectedOne(&resourceNode, q, resourceNodes, isTheOneMap) {
    1702: 					isTheOneMap[currentNode.UID] = true



[/Users/sfonseca/Repositories/argo-cd/server/application/application.go:1665] - G601 (CWE-118): Implicit memory aliasing in for loop. (Confidence: MEDIUM, Severity: MEDIUM)
    1664: 		if treeNode.Kind == kube.PodKind && treeNode.Group == "" && treeNode.UID != "" {
  > 1665: 			if isTheSelectedOne(&treeNode, q, treeNodes, isTheOneMap) {
    1666: 				pods = append(pods, treeNode)



[/Users/sfonseca/Repositories/argo-cd/cmd/argocd/commands/project.go:636] - G601 (CWE-118): Implicit memory aliasing in for loop. (Confidence: MEDIUM, Severity: MEDIUM)
    635: 	for _, p := range projects {
  > 636: 		printProjectLine(w, &p)
    637: 	}



[/Users/sfonseca/Repositories/argo-cd/cmd/argocd/commands/app.go:1241] - G601 (CWE-118): Implicit memory aliasing in for loop. (Confidence: MEDIUM, Severity: MEDIUM)
    1240: 			app.QualifiedName(),
  > 1241: 			getServer(&app),
    1242: 			app.Spec.Destination.Namespace,



[/Users/sfonseca/Repositories/argo-cd/cmd/argocd/commands/admin/app.go:404] - G601 (CWE-118): Implicit memory aliasing in for loop. (Confidence: MEDIUM, Severity: MEDIUM)
    403: 
  > 404: 		res := appStateManager.CompareAppState(&app, proj, app.Spec.Source.TargetRevision, app.Spec.Source, false, false, nil)
    405: 		items = append(items, appReconcileResult{



[/Users/sfonseca/Repositories/argo-cd/applicationset/webhook/webhook.go:108] - G601 (CWE-118): Implicit memory aliasing in for loop. (Confidence: MEDIUM, Severity: MEDIUM)
    107: 		if shouldRefresh {
  > 108: 			err := refreshApplicationSet(h.client, &appSet)
    109: 			if err != nil {



[/Users/sfonseca/Repositories/argo-cd/applicationset/webhook/webhook.go:102] - G601 (CWE-118): Implicit memory aliasing in for loop. (Confidence: MEDIUM, Severity: MEDIUM)
    101: 				h.shouldRefreshMatrixGenerator(gen.Matrix, &appSet, gitGenInfo, prGenInfo) ||
  > 102: 				h.shouldRefreshMergeGenerator(gen.Merge, &appSet, gitGenInfo, prGenInfo)
    103: 			if shouldRefresh {



[/Users/sfonseca/Repositories/argo-cd/applicationset/webhook/webhook.go:101] - G601 (CWE-118): Implicit memory aliasing in for loop. (Confidence: MEDIUM, Severity: MEDIUM)
    100: 				shouldRefreshPRGenerator(gen.PullRequest, prGenInfo) ||
  > 101: 				h.shouldRefreshMatrixGenerator(gen.Matrix, &appSet, gitGenInfo, prGenInfo) ||
    102: 				h.shouldRefreshMergeGenerator(gen.Merge, &appSet, gitGenInfo, prGenInfo)



[/Users/sfonseca/Repositories/argo-cd/applicationset/utils/clusterUtils.go:115] - G601 (CWE-118): Implicit memory aliasing in for loop. (Confidence: MEDIUM, Severity: MEDIUM)
    114: 		// This line has changed from the original Argo CD code: now receives an error, and handles it
  > 115: 		cluster, err := secretToCluster(&clusterSecret)
    116: 		if err != nil || cluster == nil {



[/Users/sfonseca/Repositories/argo-cd/applicationset/services/scm_provider/gitlab.go:115] - G601 (CWE-118): Implicit memory aliasing in for loop. (Confidence: MEDIUM, Severity: MEDIUM)
    114: 		options := gitlab.ListTreeOptions{
  > 115: 			Path: &directory,
    116: 			Ref:  &repo.Branch,



[/Users/sfonseca/Repositories/argo-cd/applicationset/services/scm_provider/bitbucket_cloud.go:104] - G601 (CWE-118): Implicit memory aliasing in for loop. (Confidence: MEDIUM, Severity: MEDIUM)
    103: 	for _, bitBucketRepo := range accountReposResp.Items {
  > 104: 		cloneUrl, err := findCloneURL(cloneProtocol, &bitBucketRepo)
    105: 		if err != nil {



[/Users/sfonseca/Repositories/argo-cd/applicationset/generators/merge.go:80] - G601 (CWE-118): Implicit memory aliasing in for loop. (Confidence: MEDIUM, Severity: MEDIUM)
    79: 				if appSet.Spec.GoTemplate {
  > 80: 					if err := mergo.Merge(&baseParamSet, overrideParamSet, mergo.WithOverride); err != nil {
    81: 						return nil, fmt.Errorf("failed to merge base param set with override param set: %w", err)



[/Users/sfonseca/Repositories/argo-cd/applicationset/controllers/applicationset_controller.go:644] - G601 (CWE-118): Implicit memory aliasing in for loop. (Confidence: MEDIUM, Severity: MEDIUM)
    643: 
  > 644: 			err = r.Client.Delete(ctx, &app)
    645: 			if err != nil {



[/Users/sfonseca/Repositories/argo-cd/applicationset/controllers/applicationset_controller.go:635] - G601 (CWE-118): Implicit memory aliasing in for loop. (Confidence: MEDIUM, Severity: MEDIUM)
    634: 			// Removes the Argo CD resources finalizer if the application contains an invalid target (eg missing cluster)
  > 635: 			err := r.removeFinalizerOnInvalidDestination(ctx, applicationSet, &app, clusterList, appLog)
    636: 			if err != nil {



[/Users/sfonseca/Repositories/argo-cd/applicationset/controllers/applicationset_controller.go:402] - G601 (CWE-118): Implicit memory aliasing in for loop. (Confidence: MEDIUM, Severity: MEDIUM)
    401: 		for _, g := range relevantGenerators {
  > 402: 			t := g.GetRequeueAfter(&requestedGenerator)
    403: 



[/Users/sfonseca/Repositories/argo-cd/applicationset/controllers/applicationset_controller.go:399] - G601 (CWE-118): Implicit memory aliasing in for loop. (Confidence: MEDIUM, Severity: MEDIUM)
    398: 
  > 399: 		relevantGenerators := generators.GetRelevantGenerators(&requestedGenerator, r.Generators)
    400: 



[/Users/sfonseca/Repositories/argo-cd/util/io/files/tar.go:101] - G305 (CWE-22): File traversal when extracting zip/tar archive (Confidence: HIGH, Severity: MEDIUM)
    100: 			// Sanity check to protect against symlink exploit
  > 101: 			linkTarget := filepath.Clean(filepath.Join(filepath.Dir(target), header.Linkname))
    102: 			realPath, err := filepath.EvalSymlinks(linkTarget)



[/Users/sfonseca/Repositories/argo-cd/util/io/files/tar.go:87] - G305 (CWE-22): File traversal when extracting zip/tar archive (Confidence: HIGH, Severity: MEDIUM)
    86: 
  > 87: 		target := filepath.Clean(filepath.Join(dstPath, header.Name))
    88: 		// Sanity check to protect against zip-slip



[/Users/sfonseca/Repositories/argo-cd/cmd/argocd-dex/commands/argocd_dex.go:105] - G303 (CWE-377): File creation in shared tmp directory without using ioutil.Tempfile (Confidence: HIGH, Severity: MEDIUM)
    104: 				} else {
  > 105: 					err = os.WriteFile("/tmp/dex.yaml", dexCfgBytes, 0644)
    106: 					errors.CheckError(err)



[/Users/sfonseca/Repositories/argo-cd/cmd/argocd-dex/commands/argocd_dex.go:86] - G303 (CWE-377): File creation in shared tmp directory without using ioutil.Tempfile (Confidence: HIGH, Severity: MEDIUM)
    85: 				}
  > 86: 				err = os.WriteFile("/tmp/tls.key", keyPem, 0600)
    87: 				if err != nil {



[/Users/sfonseca/Repositories/argo-cd/cmd/argocd-dex/commands/argocd_dex.go:82] - G303 (CWE-377): File creation in shared tmp directory without using ioutil.Tempfile (Confidence: HIGH, Severity: MEDIUM)
    81: 				certPem, keyPem := tls.EncodeX509KeyPair(config.Certificates[0])
  > 82: 				err = os.WriteFile("/tmp/tls.crt", certPem, 0600)
    83: 				if err != nil {



[/Users/sfonseca/Repositories/argo-cd/reposerver/repository/repository.go:1996] - G302 (CWE-276): Expect file permissions to be 0600 or less (Confidence: HIGH, Severity: MEDIUM)
    1995: 	if _, err := os.Stat(rootPath); err == nil {
  > 1996: 		if err := os.Chmod(rootPath, 0700); err != nil {
    1997: 			log.Warnf("Failed to restore read/write/execute permissions on %s: %v", rootPath, err)



[/Users/sfonseca/Repositories/argo-cd/util/io/files/util.go:60] - G301 (CWE-276): Expect directory permissions to be 0750 or less (Confidence: HIGH, Severity: MEDIUM)
    59: 	tempDir := path.Join(base, newUUID.String())
  > 60: 	if err := os.MkdirAll(tempDir, 0755); err != nil {
    61: 		return "", fmt.Errorf("error creating tempDir: %s", err)



[/Users/sfonseca/Repositories/argo-cd/util/io/files/tar.go:116] - G301 (CWE-276): Expect directory permissions to be 0750 or less (Confidence: HIGH, Severity: MEDIUM)
    115: 		case tar.TypeReg:
  > 116: 			err := os.MkdirAll(filepath.Dir(target), 0755)
    117: 			if err != nil {



[/Users/sfonseca/Repositories/argo-cd/util/io/files/tar.go:95] - G301 (CWE-276): Expect directory permissions to be 0750 or less (Confidence: HIGH, Severity: MEDIUM)
    94: 		case tar.TypeDir:
  > 95: 			err := os.MkdirAll(target, 0755)
    96: 			if err != nil {



[/Users/sfonseca/Repositories/argo-cd/util/git/client.go:300] - G301 (CWE-276): Expect directory permissions to be 0750 or less (Confidence: HIGH, Severity: MEDIUM)
    299: 	}
  > 300: 	err = os.MkdirAll(m.root, 0755)
    301: 	if err != nil {



[/Users/sfonseca/Repositories/argo-cd/util/helm/cmd.go:178] - G306 (CWE-276): Expect WriteFile permissions to be 0600 or less (Confidence: HIGH, Severity: MEDIUM)
    177: 	}
  > 178: 	err = os.WriteFile(file.Name(), data, 0644)
    179: 	if err != nil {



[/Users/sfonseca/Repositories/argo-cd/util/gpg/gpg.go:260] - G306 (CWE-276): Expect WriteFile permissions to be 0600 or less (Confidence: HIGH, Severity: MEDIUM)
    259: 
  > 260: 	err = os.WriteFile(filepath.Join(gnuPgHome, canaryMarkerFilename), []byte("canary"), 0644)
    261: 	if err != nil {



[/Users/sfonseca/Repositories/argo-cd/util/cli/cli.go:318] - G306 (CWE-276): Expect WriteFile permissions to be 0600 or less (Confidence: HIGH, Severity: MEDIUM)
    317: 	}
  > 318: 	err = os.WriteFile(liveFile, liveData, 0644)
    319: 	if err != nil {



[/Users/sfonseca/Repositories/argo-cd/util/cli/cli.go:306] - G306 (CWE-276): Expect WriteFile permissions to be 0600 or less (Confidence: HIGH, Severity: MEDIUM)
    305: 	}
  > 306: 	err = os.WriteFile(targetFile, targetData, 0644)
    307: 	if err != nil {



[/Users/sfonseca/Repositories/argo-cd/test/e2e/fixture/gpgkeys/gpgkeys.go:22] - G306 (CWE-276): Expect WriteFile permissions to be 0600 or less (Confidence: HIGH, Severity: MEDIUM)
    21: 		errors.CheckError(err)
  > 22: 		err = os.WriteFile(fmt.Sprintf("%s/app/config/gpg/source/%s", fixture.TmpDir, fixture.GpgGoodKeyID), keyData, 0644)
    23: 		errors.CheckError(err)



[/Users/sfonseca/Repositories/argo-cd/test/e2e/fixture/fixture.go:720] - G306 (CWE-276): Expect WriteFile permissions to be 0600 or less (Confidence: HIGH, Severity: MEDIUM)
    719: 
  > 720: 	CheckError(os.WriteFile(filepath.Join(repoDirectory(), path), []byte(contents), 0644))
    721: }



[/Users/sfonseca/Repositories/argo-cd/test/e2e/fixture/fixture.go:696] - G306 (CWE-276): Expect WriteFile permissions to be 0600 or less (Confidence: HIGH, Severity: MEDIUM)
    695: 
  > 696: 	CheckError(os.WriteFile(filename, bytes, 0644))
    697: 	FailOnErr(Run(repoDirectory(), "git", "diff"))



[/Users/sfonseca/Repositories/argo-cd/test/e2e/fixture/certs/certs.go:55] - G306 (CWE-276): Expect WriteFile permissions to be 0600 or less (Confidence: HIGH, Severity: MEDIUM)
    54: 		errors.CheckError(err)
  > 55: 		err = os.WriteFile(fixture.TmpDir+"/app/config/ssh/ssh_known_hosts", knownHostsData, 0644)
    56: 		errors.CheckError(err)



[/Users/sfonseca/Repositories/argo-cd/test/e2e/fixture/certs/certs.go:28] - G306 (CWE-276): Expect WriteFile permissions to be 0600 or less (Confidence: HIGH, Severity: MEDIUM)
    27: 		errors.CheckError(err)
  > 28: 		err = os.WriteFile(fixture.TmpDir+"/app/config/tls/127.0.0.1", certData, 0644)
    29: 		errors.CheckError(err)



[/Users/sfonseca/Repositories/argo-cd/test/e2e/fixture/certs/certs.go:26] - G306 (CWE-276): Expect WriteFile permissions to be 0600 or less (Confidence: HIGH, Severity: MEDIUM)
    25: 		errors.CheckError(err)
  > 26: 		err = os.WriteFile(fixture.TmpDir+"/app/config/tls/localhost", certData, 0644)
    27: 		errors.CheckError(err)



[/Users/sfonseca/Repositories/argo-cd/reposerver/repository/repository.go:910] - G306 (CWE-276): Expect WriteFile permissions to be 0600 or less (Confidence: HIGH, Severity: MEDIUM)
    909: 			defer func() { _ = os.RemoveAll(p) }()
  > 910: 			err = os.WriteFile(p, []byte(appHelm.Values), 0644)
    911: 			if err != nil {



[/Users/sfonseca/Repositories/argo-cd/reposerver/repository/repository.go:819] - G306 (CWE-276): Expect WriteFile permissions to be 0600 or less (Confidence: HIGH, Severity: MEDIUM)
    818: 	}
  > 819: 	return os.WriteFile(markerFile, []byte("marker"), 0644)
    820: }



[/Users/sfonseca/Repositories/argo-cd/hack/known_types/main.go:85] - G306 (CWE-276): Expect WriteFile permissions to be 0600 or less (Confidence: HIGH, Severity: MEDIUM)
    84: 
  > 85: 			return os.WriteFile(outputPath, []byte(res), 0644)
    86: 		},



[/Users/sfonseca/Repositories/argo-cd/hack/known_types/main.go:80] - G306 (CWE-276): Expect WriteFile permissions to be 0600 or less (Confidence: HIGH, Severity: MEDIUM)
    79: 			if docsOutputPath != "" {
  > 80: 				if err = os.WriteFile(docsOutputPath, []byte(strings.Join(docs, "\n")), 0644); err != nil {
    81: 					return err



[/Users/sfonseca/Repositories/argo-cd/hack/gen-docs/main.go:64] - G306 (CWE-276): Expect WriteFile permissions to be 0600 or less (Confidence: HIGH, Severity: MEDIUM)
    63: 	}
  > 64: 	return os.WriteFile("mkdocs.yml", newmkdocs, 0644)
    65: }



[/Users/sfonseca/Repositories/argo-cd/hack/gen-crd-spec/main.go:152] - G306 (CWE-276): Expect WriteFile permissions to be 0600 or less (Confidence: HIGH, Severity: MEDIUM)
    151: 
  > 152: 	err = os.WriteFile(path, yamlBytes, 0644)
    153: 	checkErr(err)



[/Users/sfonseca/Repositories/argo-cd/hack/gen-catalog/main.go:112] - G306 (CWE-276): Expect WriteFile permissions to be 0600 or less (Confidence: HIGH, Severity: MEDIUM)
    111: 			}
  > 112: 			if err := os.WriteFile("./docs/operator-manual/notifications/troubleshooting-commands.md", commandDocs.Bytes(), 0644); err != nil {
    113: 				log.Fatal(err)



[/Users/sfonseca/Repositories/argo-cd/hack/gen-catalog/main.go:105] - G306 (CWE-276): Expect WriteFile permissions to be 0600 or less (Confidence: HIGH, Severity: MEDIUM)
    104: 			generateBuiltInTriggersDocs(&builtItDocsData, notificationTriggers, notificationTemplates)
  > 105: 			if err := os.WriteFile("./docs/operator-manual/notifications/catalog.md", builtItDocsData.Bytes(), 0644); err != nil {
    106: 				log.Fatal(err)



[/Users/sfonseca/Repositories/argo-cd/hack/gen-catalog/main.go:84] - G306 (CWE-276): Expect WriteFile permissions to be 0600 or less (Confidence: HIGH, Severity: MEDIUM)
    83: 
  > 84: 			err = os.WriteFile(target, d, 0644)
    85: 			dieOnError(err, "Failed to write builtin configmap")



[/Users/sfonseca/Repositories/argo-cd/hack/dev-mounter/main.go:90] - G306 (CWE-276): Expect WriteFile permissions to be 0600 or less (Confidence: HIGH, Severity: MEDIUM)
    89: 					p := path.Join(destPath, name)
  > 90: 					err := os.WriteFile(p, []byte(data), 0644)
    91: 					if err != nil {



[/Users/sfonseca/Repositories/argo-cd/cmd/argocd/commands/context.go:68] - G306 (CWE-276): Expect WriteFile permissions to be 0600 or less (Confidence: HIGH, Severity: MEDIUM)
    67: 			errors.CheckError(err)
  > 68: 			err = os.WriteFile(prevCtxFile, []byte(prevCtx), 0644)
    69: 			errors.CheckError(err)



[/Users/sfonseca/Repositories/argo-cd/cmd/argocd/commands/admin/app.go:305] - G306 (CWE-276): Expect WriteFile permissions to be 0600 or less (Confidence: HIGH, Severity: MEDIUM)
    304: 
  > 305: 	return os.WriteFile(outputPath, data, 0644)
    306: }



[/Users/sfonseca/Repositories/argo-cd/cmd/argocd-dex/commands/argocd_dex.go:199] - G306 (CWE-276): Expect WriteFile permissions to be 0600 or less (Confidence: HIGH, Severity: MEDIUM)
    198: 			} else {
  > 199: 				err = os.WriteFile(out, dexCfgBytes, 0644)
    200: 				errors.CheckError(err)



[/Users/sfonseca/Repositories/argo-cd/cmd/argocd-dex/commands/argocd_dex.go:105] - G306 (CWE-276): Expect WriteFile permissions to be 0600 or less (Confidence: HIGH, Severity: MEDIUM)
    104: 				} else {
  > 105: 					err = os.WriteFile("/tmp/dex.yaml", dexCfgBytes, 0644)
    106: 					errors.CheckError(err)



[/Users/sfonseca/Repositories/argo-cd/util/git/creds.go:335] - G307 (CWE-703): Deferring unsafe method "Close" on type "*os.File" (Confidence: HIGH, Severity: MEDIUM)
    334: 			}
  > 335: 			defer keyFile.Close()
    336: 		} else {



[/Users/sfonseca/Repositories/argo-cd/util/git/creds.go:326] - G307 (CWE-703): Deferring unsafe method "Close" on type "*os.File" (Confidence: HIGH, Severity: MEDIUM)
    325: 		if err == nil {
  > 326: 			defer certFile.Close()
    327: 			keyFile, err = os.CreateTemp(argoio.TempDir, "")



[/Users/sfonseca/Repositories/argo-cd/util/git/creds.go:166] - G307 (CWE-703): Deferring unsafe method "Close" on type "*os.File" (Confidence: HIGH, Severity: MEDIUM)
    165: 			}
  > 166: 			defer keyFile.Close()
    167: 		} else {



[/Users/sfonseca/Repositories/argo-cd/util/git/creds.go:157] - G307 (CWE-703): Deferring unsafe method "Close" on type "*os.File" (Confidence: HIGH, Severity: MEDIUM)
    156: 		if err == nil {
  > 157: 			defer certFile.Close()
    158: 			keyFile, err = os.CreateTemp(argoio.TempDir, "")



[/Users/sfonseca/Repositories/argo-cd/test/e2e/fixture/app/actions.go:85] - G307 (CWE-703): Deferring unsafe method "Close" on type "*os.File" (Confidence: HIGH, Severity: MEDIUM)
    84: 	}
  > 85: 	defer tmpFile.Close()
    86: 	a.runCli(args...)



[/Users/sfonseca/Repositories/argo-cd/applicationset/utils/utils.go:47] - G103 (CWE-242): Use of unsafe calls should be audited (Confidence: HIGH, Severity: LOW)
    46: func copyUnexported(copy, original reflect.Value) {
  > 47: 	var unexported = reflect.NewAt(original.Type(), unsafe.Pointer(original.UnsafeAddr())).Elem()
    48: 	copyValueIntoUnexported(copy, unexported)



[/Users/sfonseca/Repositories/argo-cd/applicationset/utils/utils.go:41] - G103 (CWE-242): Use of unsafe calls should be audited (Confidence: HIGH, Severity: LOW)
    40: func copyValueIntoUnexported(destination, value reflect.Value) {
  > 41: 	reflect.NewAt(destination.Type(), unsafe.Pointer(destination.UnsafeAddr())).
    42: 		Elem().



[/Users/sfonseca/Repositories/argo-cd/util/io/files/tar.go:130] - G104 (CWE-703): Errors unhandled. (Confidence: HIGH, Severity: LOW)
    129: 			}
  > 130: 			f.Close()
    131: 		}



[/Users/sfonseca/Repositories/argo-cd/util/io/files/tar.go:127] - G104 (CWE-703): Errors unhandled. (Confidence: HIGH, Severity: LOW)
    126: 			if _, err := io.Copy(w, tr); err != nil {
  > 127: 				f.Close()
    128: 				return fmt.Errorf("error writing tgz file: %w", err)



[/Users/sfonseca/Repositories/argo-cd/util/git/creds.go:353] - G104 (CWE-703): Errors unhandled. (Confidence: HIGH, Severity: LOW)
    352: 		if err != nil {
  > 353: 			httpCloser.Close()
    354: 			return NopCloser{}, nil, err



[/Users/sfonseca/Repositories/argo-cd/util/git/creds.go:345] - G104 (CWE-703): Errors unhandled. (Confidence: HIGH, Severity: LOW)
    344: 		if err != nil {
  > 345: 			httpCloser.Close()
    346: 			return NopCloser{}, nil, err



[/Users/sfonseca/Repositories/argo-cd/util/git/creds.go:184] - G104 (CWE-703): Errors unhandled. (Confidence: HIGH, Severity: LOW)
    183: 		if err != nil {
  > 184: 			httpCloser.Close()
    185: 			return NopCloser{}, nil, err



[/Users/sfonseca/Repositories/argo-cd/util/git/creds.go:176] - G104 (CWE-703): Errors unhandled. (Confidence: HIGH, Severity: LOW)
    175: 		if err != nil {
  > 176: 			httpCloser.Close()
    177: 			return NopCloser{}, nil, err



[/Users/sfonseca/Repositories/argo-cd/test/e2e/fixture/fixture.go:744] - G104 (CWE-703): Errors unhandled. (Confidence: HIGH, Severity: LOW)
    743: 	FailOnErr(Run(repoDirectory(), "git", "-c", fmt.Sprintf("user.signingkey=%s", GpgGoodKeyID), "commit", "-S", "-am", "add file"))
  > 744: 	os.Setenv("GNUPGHOME", prevGnuPGHome)
    745: 	if IsRemote() {



[/Users/sfonseca/Repositories/argo-cd/server/application/terminal.go:261] - G104 (CWE-703): Errors unhandled. (Confidence: HIGH, Severity: LOW)
    260: 
  > 261: 	session.Close()
    262: }



[/Users/sfonseca/Repositories/argo-cd/server/application/terminal.go:257] - G104 (CWE-703): Errors unhandled. (Confidence: HIGH, Severity: LOW)
    256: 		http.Error(w, "Failed to exec container", http.StatusBadRequest)
  > 257: 		session.Close()
    258: 		return



[/Users/sfonseca/Repositories/argo-cd/server/application/application.go:540] - G104 (CWE-703): Errors unhandled. (Confidence: HIGH, Severity: LOW)
    539: 
  > 540: 	stream.SendAndClose(manifestInfo)
    541: 	return nil



[/Users/sfonseca/Repositories/argo-cd/cmd/argocd/commands/headless/headless.go:167] - G104 (CWE-703): Errors unhandled. (Confidence: HIGH, Severity: LOW)
    166: 	log.SetLevel(log.ErrorLevel)
  > 167: 	os.Setenv(v1alpha1.EnvVarFakeInClusterConfig, "true")
    168: 	if address == nil {



Summary:
  Gosec  : 2.14.0
  Files  : 437
  Lines  : 188288
  Nosec  : 0
  Issues : 171

